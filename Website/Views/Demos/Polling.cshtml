<h2>Real-Time Technique: Polling</h2>

<div>
    <p><strong>Polling</strong> makes a continuous stream of requests to a resource, hoping that it's changed</p>
    <p>The following demo calls <a href="@Url.Content("~/Handlers/Clock.ashx")">@Url.Content("~/Handlers/Clock.ashx")</a> every 10 milliseconds</p>
</div>

<section>
    <div id="demo"></div>
    <button id="toggle-button">Start/Stop</button>
</section>

<section>
    <pre id="code"></pre>
</section>

<script id="script-block" type="text/javascript">
    $(function () {
        var enabled = false;
        var demo = $('#demo');

        function updateTime() {
            if(!enabled)
                return;
            
            $.ajax('@Url.Content("~/Handlers/ClockAsync.ashx")')
                .success(function (ticks) {
                    var time = new Date(ticks);
                    demo.text(time.toDateString() + ' ' +
                              time.getHours() + ':' +
                              time.getMinutes() + ':' +
                              time.getSeconds() + ':' +
                              time.getMilliseconds());
                })
                // Queue a new request (here's where the loop is!)
                .complete(function () { setTimeout(updateTime, 10); });
        }

        $('#toggle-button').click(function() {
            enabled = !enabled;
            updateTime();
        });
    });
</script>