@{ var serviceUrl = Url.Action("Index", "Newsfeed"); }

<h2>Real-Time Technique: Polling</h2>

<div>
    <p><strong>Polling</strong> makes a continuous stream of requests to a resource, hoping that it's changed</p>
    <p>The following demo calls <a href="@serviceUrl">@serviceUrl</a> every 10 milliseconds</p>
</div>

<section>
    
    <span>Started: <span id="enabled">false</span></span>
    <button id="toggle-button">Start/Stop</button>
    <button id="add-story">Add Story</button>

    <div id="demo"></div>
</section>

<section>
    <pre id="code"></pre>
</section>

<script id="script-block" type="text/javascript">
    $(function () {
        var demo = $('#demo');
        
        function enabled(val) {
            return $('#enabled').text(val) == 'true';
        }

        function updateTime() {
            if (!enabled())
                return;
            
            $.ajax('@serviceUrl')
                .success(function (html) {
                    demo.html(html);
                })
                // Queue a new request (here's where the loop is!)
                .complete(function () { setTimeout(updateTime, 10); });
        }

        $('#toggle-button').click(function() {
            enabled(!enabled());
            updateTime();
        });
    });
</script>